{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dr-combobox/dr-combobox.component.html","webpack:///./src/app/dr-combobox/dr-combobox.component.ts","webpack:///./src/app/dr-list/dr-list.component.html","webpack:///./src/app/dr-list/dr-list.component.ts","webpack:///./src/app/dr-radio-group/dr-radio-group.component.html","webpack:///./src/app/dr-radio-group/dr-radio-group.component.ts","webpack:///./src/app/dr-textbox/dr-textbox.component.html","webpack:///./src/app/dr-textbox/dr-textbox.component.ts","webpack:///./src/app/drawer-input/drawer-input.component.html","webpack:///./src/app/drawer-input/drawer-input.component.less","webpack:///./src/app/drawer-input/drawer-input.component.ts","webpack:///./src/app/drawer-text-parser.service.ts","webpack:///./src/app/elements-grid/elements-grid.component.html","webpack:///./src/app/elements-grid/elements-grid.component.less","webpack:///./src/app/elements-grid/elements-grid.component.ts","webpack:///./src/app/example.ts","webpack:///./src/app/material-modules/material-modules.module.ts","webpack:///./src/app/models/Element.ts","webpack:///./src/app/models/ElementType.ts","webpack:///./src/app/parsed-elements-grid.service.ts","webpack:///./src/app/parsers/IdentityParser.ts","webpack:///./src/app/parsers/KeyValueParser.ts","webpack:///./src/app/parsers/ListParser.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <img src=\\\"https://www.stampli.com/wp-content/uploads/2018/06/logo.png\\\" alt=\\\"Stampli\\\">\\r\\n  <span style=\\\"margin: auto auto\\\">Drawer App</span>\\r\\n</mat-toolbar>\\r\\n<app-drawer-input></app-drawer-input>\\r\\n<app-elements-grid></app-elements-grid>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQubGVzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'stampli-ex';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { DrawerInputComponent } from './drawer-input/drawer-input.component';\nimport { FormsModule } from '@angular/forms';\nimport { ElementsGridComponent } from './elements-grid/elements-grid.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MaterialModulesModule} from './material-modules/material-modules.module';\nimport { DrComboboxComponent } from './dr-combobox/dr-combobox.component';\nimport { DrTextboxComponent } from './dr-textbox/dr-textbox.component';\nimport { DrRadioGroupComponent } from './dr-radio-group/dr-radio-group.component';\nimport { DrListComponent } from './dr-list/dr-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DrawerInputComponent,\n    ElementsGridComponent,\n    DrComboboxComponent,\n    DrTextboxComponent,\n    DrRadioGroupComponent,\n    DrListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MaterialModulesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<mat-form-field>\\n  <mat-label>{{element.name}}</mat-label>\\n  <mat-select>\\n    <mat-option *ngFor=\\\"let entry of element.value\\\" [value]=\\\"entry.key\\\">\\n      {{entry.value}}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport { Element} from '../models/Element';\n\n@Component({\n  selector: 'app-dr-combobox',\n  templateUrl: './dr-combobox.component.html',\n  styleUrls: []\n})\nexport class DrComboboxComponent implements OnInit {\n  @Input()\n  element: Element;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<label>{{element.name}}</label>\\n<mat-list>\\n  <mat-list-item *ngFor=\\\"let value of element.value\\\"\\n                 role=\\\"listitem\\\">{{value}}</mat-list-item>\\n</mat-list>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Element} from '../models/Element';\n\n@Component({\n  selector: 'app-dr-list',\n  templateUrl: './dr-list.component.html',\n  styleUrls: []\n})\nexport class DrListComponent implements OnInit {\n  @Input()\n  element: Element;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div>\\n  <label id=\\\"{{'radio' + element.row + '&' + element.column}}\\\"\\n         style=\\\"padding: 10px;\\\">\\n    {{element.name}}\\n  </label>\\n  <mat-radio-group>\\n    <mat-radio-button *ngFor=\\\"let radioEntry of element.value\\\"\\n                      name=\\\"{{'radio' + element.row + '&' + element.column}}\\\"\\n                      value=\\\"{{radioEntry.key}}\\\">\\n      {{radioEntry.value}}\\n    </mat-radio-button>\\n  </mat-radio-group>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport { Element} from '../models/Element';\n\n@Component({\n  selector: 'app-dr-radio-group',\n  templateUrl: './dr-radio-group.component.html',\n  styleUrls: []\n})\nexport class DrRadioGroupComponent implements OnInit {\n  @Input()\n  element: Element;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-form-field>\\n  <input matInput placeholder=\\\"{{element.name}}\\\" value=\\\"{{element.value}}\\\">\\n</mat-form-field>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Element} from '../models/Element';\n\n@Component({\n  selector: 'app-dr-textbox',\n  templateUrl: './dr-textbox.component.html',\n  styleUrls: []\n})\nexport class DrTextboxComponent implements OnInit {\n  @Input()\n  element: Element;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-form-field class=\\\"drawer-input\\\">\\n  <textarea matInput [(ngModel)]=\\\"txtInput\\\"></textarea>\\n</mat-form-field>\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"draw()\\\"\\n        style=\\\"margin: 10px\\\">\\n  Draw\\n</button>\\n\"","module.exports = \".drawer-input {\\n  width: 25%;\\n}\\n.drawer-input textarea {\\n  height: 150px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZHJhd2VyLWlucHV0L0M6L3dvcmtzcGFjZXMvc3RhbXBsaS1leC9zcmMvYXBwL2RyYXdlci1pbnB1dC9kcmF3ZXItaW5wdXQuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2RyYXdlci1pbnB1dC9kcmF3ZXItaW5wdXQuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0FDQ0Y7QURGQTtFQUdJLGFBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL2RyYXdlci1pbnB1dC9kcmF3ZXItaW5wdXQuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZHJhd2VyLWlucHV0IHtcbiAgd2lkdGg6IDI1JTtcbiAgdGV4dGFyZWEge1xuICAgIGhlaWdodDogMTUwcHg7XG4gIH1cbn1cbiIsIi5kcmF3ZXItaW5wdXQge1xuICB3aWR0aDogMjUlO1xufVxuLmRyYXdlci1pbnB1dCB0ZXh0YXJlYSB7XG4gIGhlaWdodDogMTUwcHg7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport {DrawerTextParserService} from '../drawer-text-parser.service';\nimport {ParsedElementsGridService} from '../parsed-elements-grid.service';\nimport example from '../example';\n\n@Component({\n  selector: 'app-drawer-input',\n  templateUrl: './drawer-input.component.html',\n  styleUrls: ['./drawer-input.component.less']\n})\nexport class DrawerInputComponent implements OnInit {\n  txtInput: string;\n\n  constructor(private drawerTextParserService: DrawerTextParserService,\n              private parsedElementsGridService: ParsedElementsGridService) {\n    this.txtInput = example;\n  }\n\n  ngOnInit() {\n  }\n\n  draw() {\n    this.parsedElementsGridService.grid = this.drawerTextParserService.parse(this.txtInput);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Element} from './models/Element';\nimport ElementType from './models/ElementType';\nimport KeyValueParser from './parsers/KeyValueParser';\nimport keyValueParser from './parsers/KeyValueParser';\nimport listParser from './parsers/ListParser';\nimport IdentityParser from './parsers/IdentityParser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DrawerTextParserService {\n  typeToParser = {};\n  constructor() {\n    this.typeToParser[ElementType.COMBOBOX] = KeyValueParser;\n    this.typeToParser[ElementType.LIST] = listParser;\n    this.typeToParser[ElementType.RADIO_BUTTON] = keyValueParser;\n    this.typeToParser[ElementType.TEXT_BOX] = IdentityParser;\n  }\n  parse(txt: string): Element[][] {\n    const parsedElements: Element[][] = [];\n    if (!this.validate(txt)) {\n      throw new Error('InvalidArgument');\n    }\n    const lines = txt.split('\\n');\n    const elements = lines.map(line => this.parseRow(line));\n    elements.forEach(e => {\n      parsedElements[e.row - 1] = parsedElements[e.row - 1] || [];\n      parsedElements[e.row - 1][e.column - 1] = e;\n    });\n    console.log(parsedElements);\n    return parsedElements;\n  }\n\n  private parseRow(elementTxt): Element {\n    const [type, name, txtValue, column, row] = elementTxt.split(';');\n    const valueParser = this.typeToParser[type] || IdentityParser;\n    const value = valueParser(txtValue);\n    return {\n      type, name, value, row, column\n    };\n  }\n  validate(txt: string): boolean {\n    return true;\n  }\n}\n","module.exports = \"<div *ngIf=\\\"parsedElementsGridService.grid\\\">\\n  <div [ngStyle]=\\\"{'display': 'grid',\\n'grid-template-columns': 'repeat('+parsedElementsGridService.grid[0].length+', 1fr)',\\n'grid-template-rows':'repeat('+parsedElementsGridService.grid.length+', 1fr)'}\\\"\\n       style=\\\"grid-column-gap: 40px; grid-row-gap: 40px\\\">\\n    <div *ngFor=\\\"let element of parsedElementsGridService.grid.flat()\\\">\\n      <div [ngStyle]=\\\"{'grid-column': element.column, 'grid-row': element.row}\\\">\\n        <app-dr-textbox *ngIf=\\\"element.type === 'textbox'\\\" [element]=\\\"element\\\"></app-dr-textbox>\\n        <app-dr-combobox *ngIf=\\\"element.type === 'combobox'\\\" [element]=\\\"element\\\"></app-dr-combobox>\\n        <app-dr-radio-group *ngIf=\\\"element.type === 'radiobutton'\\\" [element]=\\\"element\\\"></app-dr-radio-group>\\n        <app-dr-list *ngIf=\\\"element.type === 'list'\\\" [element]=\\\"element\\\"></app-dr-list>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"mat-grid-list {\\n  width: 50%;\\n  margin-top: 50px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWxlbWVudHMtZ3JpZC9DOi93b3Jrc3BhY2VzL3N0YW1wbGktZXgvc3JjL2FwcC9lbGVtZW50cy1ncmlkL2VsZW1lbnRzLWdyaWQuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2VsZW1lbnRzLWdyaWQvZWxlbWVudHMtZ3JpZC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7RUFDQSxnQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvZWxlbWVudHMtZ3JpZC9lbGVtZW50cy1ncmlkLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWdyaWQtbGlzdCB7XG4gIHdpZHRoOiA1MCU7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG59XG4iLCJtYXQtZ3JpZC1saXN0IHtcbiAgd2lkdGg6IDUwJTtcbiAgbWFyZ2luLXRvcDogNTBweDtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {ParsedElementsGridService} from '../parsed-elements-grid.service';\nimport {Element} from '../models/Element';\n\n@Component({\n  selector: 'app-elements-grid',\n  templateUrl: './elements-grid.component.html',\n  styleUrls: ['./elements-grid.component.less']\n})\nexport class ElementsGridComponent implements OnInit {\n\n  constructor(public parsedElementsGridService: ParsedElementsGridService) { }\n\n  ngOnInit() {\n  }\n\n  getNumberOfColumns() {\n    if (this.parsedElementsGridService.grid) {\n      // get the length of the first row\n      return this.parsedElementsGridService.grid[0].length;\n    } else {\n      return 0;\n    }\n  }\n}\n","const value = 'textbox;name1;;1;1' +\r\n  '\\ncombobox;name2;key3,val3,key5,val5;1;2' +\r\n  '\\nradiobutton;name3;key3,val3,key5,val5;2;1' +\r\n  '\\nlist;name4;val6,val7,val8;2;2';\r\nexport default value;\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModulesModule { }\n","export class Element {\r\n  type: string;\r\n  name: string;\r\n  value: any;\r\n  column: number;\r\n  row: number;\r\n}\r\n","export default {\r\n  TEXT_BOX: 'textbox',\r\n  LIST: 'list',\r\n  COMBOBOX: 'combobox',\r\n  RADIO_BUTTON: 'radiobutton'\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { Element} from './models/Element';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParsedElementsGridService {\n  grid: Element[][];\n\n  constructor() {\n  }\n}\n","export default function(txtValue) {\r\n  return txtValue;\r\n}\r\n","export default function keyValueParser(txtValue: string) {\r\n  const parts = txtValue.split(',');\r\n  const keyValue = [];\r\n  for (let i = 0; i < parts.length - 1; i += 2) {\r\n    keyValue.push({key: parts[i], value: parts[i + 1]});\r\n  }\r\n  return keyValue;\r\n}\r\n","export default function listParser(txtValue: string) {\r\n  return txtValue.split(',');\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}